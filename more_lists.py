# Запустить это - python more_lists.py

# Операции над списками
# Конкатенация списков = сложение. Напоминает строки? Строки = списки символов
print("[1] + [2] =", [1] + [2])
print('"a" + "b" =', "a" + "b")

# Дублирование
print("[1] * 3 =", [1] * 3)
print('"abc" * 3 =', "abc" * 3)

# Индексы
print("[1, 2, 3, 4, 5][2] =", [1, 2, 3, 4, 5][2])
print('"abcdefg"[2] =', "abcdefg"[2])

# Отрицательные индексы
print("[1, 2, 3, 4, 5][-2] =", [1, 2, 3, 4, 5][-2])
print('"abcdefg"[-2] =', "abcdefg"[-2])

# Срезы, первый индекс - начало среза, второй индекс - конец среза
print("[1, 2, 3, 4, 5, 6, 7, 8, 9, 0][2:4] =", [1, 2, 3, 4, 5, 6, 7, 8, 9, 0][2:4])
print('"abcdefgh"[2:4] =', "abcdefgh"[2:4])

# Индексы можно пропускать - в таком случае это оззначает "от начала списка"
print('[1, 2, 3, 4, 5, 6, 7, 8, 9, 0][:4] =', [1, 2, 3, 4, 5, 6, 7, 8, 9, 0][:4])
print('"abcdefgh"[:4] =', "abcdefgh"[:4])

# Или до конца списка
print('[1, 2, 3, 4, 5, 6, 7, 8, 9, 0][2:] =', [1, 2, 3, 4, 5, 6, 7, 8, 9, 0][2:])
print('"abcdefgh"[2:] =', "abcdefgh"[2:])

# Они и тут могут быть отрицательными
print("[1, 2, 3, 4, 5, 6, 7, 8, 9, 0][2:-2] =", [1, 2, 3, 4, 5, 6, 7, 8, 9, 0][2:-2])
print('"abcdefghijkl"[2:-2] =', "abcdefghijkl"[2:-2])

# Если необходимо сделать копию, ее можно сделать так
print("[1, 2, 3, 4, 5, 6, 7, 8, 9, 0][:] =", [1, 2, 3, 4, 5, 6, 7, 8, 9, 0][:])
print('"abcdefgh"[:] =', "abcdefgh"[:])

# Срез можно сделать с шагом
print("[1, 2, 3, 4, 5, 6, 7, 8, 9, 0][2:7:2] =", [1, 2, 3, 4, 5, 6, 7, 8, 9, 0][2:7:2])
print('"abcdefghijkl"[2:7:2] =', "abcdefghijkl"[2:7:2])

# И даже с отрицательным шагом, в таком случае мы пойдем с конца списка
print("[1, 2, 3, 4, 5, 6, 7, 8, 9, 0][::-1] =", [1, 2, 3, 4, 5, 6, 7, 8, 9, 0][::-1])
print('"abcdefghijkl"[::-1] =', "abcdefghijkl"[::-1])

# Добавление элемента в конец
a = [1, 2, 3]
print("a:", a)
a.append(4)
print("Appended 4 to the end:", a)

# Сортировка списка
a = [5, 2, 4, 3, 1]
print("a:", a)
a.sort()
print("Sorted a:", a)

# Добавление элемента на какую-то позицию
a = [1, 2, 3]
print("a:", a)
a.insert(2, 4)
print("Inserting 4 at index of 2:", a)






























